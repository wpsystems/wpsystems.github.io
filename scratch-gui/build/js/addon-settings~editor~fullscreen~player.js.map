{"version":3,"file":"js/addon-settings~editor~fullscreen~player.js","sources":["webpack://GUI/./src/lib/tw-theme-dark.css","webpack://GUI/./src/addons/addon-manifests.js","webpack://GUI/./src/addons/addons sync ^\\.\\/.*\\/addon\\.json$","webpack://GUI/./src/addons/channels.js","webpack://GUI/./src/addons/event-target.js","webpack://GUI/./src/addons/is-mobile.js","webpack://GUI/./src/addons/settings-store-singleton.js","webpack://GUI/./src/addons/settings-store.js","webpack://GUI/./src/lib/tw-theme-hoc.jsx"],"sourcesContent":["module.exports = \"/* GUI */\\n:root {\\n    background: #111;\\n    color: #eee;\\n    /* see colors.csss */\\n    --ui-primary: rgb(17, 17, 17);\\n    --ui-secondary: rgb(30, 30, 30);\\n    --ui-tertiary: rgb(46, 46, 46);\\n    --ui-modal-overlay: #333a;\\n    --text-primary: #eee;\\n    /* scratch-paint */\\n    --paint-ui-pane-border: rgb(46, 46, 46);\\n    --paint-text-primary: #eee;\\n    --paint-form-border: rgb(46, 46, 46);\\n}\\n\\n/* Blockly */\\n.blocklySvg {\\n    background-color: var(--ui-secondary) !important;\\n}\\n[id^=\\\"blocklyGridPattern\\\"] > line {\\n    stroke: #484848;\\n}\\n.blocklyFlyoutBackground {\\n    fill: #111;\\n}\\n.blocklyFlyoutLabelText {\\n    fill: #ccc;\\n}\\n.blocklyFlyoutButton .blocklyText {\\n    fill: #ccc;\\n}\\n.blocklyFlyoutButton:hover {\\n    fill: #111;\\n}\\n.scratchCategoryMenu {\\n    color: #ccc;\\n}\\n.blocklyToolboxDiv,\\n.scratchCategoryMenu {\\n    background: #111 !important;\\n}\\n.blocklyScrollbarHandle {\\n    fill: #666;\\n}\\n.blocklyZoom {\\n    filter: invert(100%);\\n}\\n.scratchCategoryMenuItem.categorySelected {\\n    background: var(--ui-secondary);\\n}\\n.valueReportBox {\\n    color: black;\\n}\\n.blocklyWidgetDiv .goog-menu {\\n    background: var(--ui-primary);\\n    border-color: hsla(0, 0%, 0%, 0.15);\\n}\\n.blocklyWidgetDiv .goog-menuitem {\\n    color: var(--text-primary);\\n}\\n.blocklyWidgetDiv .goog-menuitem.goog-menuitem-highlight {\\n    background-color: var(--ui-tertiary);\\n    border-color: transparent; /* remove border */\\n}\\n.scratchCommentText {\\n    color: black;\\n}\\n.blocklyInsertionMarker > .blocklyPath {\\n    fill: #ccc;\\n}\\n\\n/* Other / Multipurpose */\\n.Popover-body {\\n    background: var(--ui-secondary);\\n    border-color: var(--ui-tertiary);\\n    color: var(--text-primary);\\n}\\n.Popover-tipShape {\\n    fill: var(--ui-secondary);\\n    stroke: var(--ui-tertiary);\\n}\\n\"","/**\n * Copyright (C) 2021 Thomas Weber\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport addons from './addons.json';\nimport newAddons from './new-addons.json';\nimport isMobile from './is-mobile';\n\nconst clipboardSupported = !!(navigator.clipboard && navigator.clipboard.write);\nconst mediaRecorderSupported = !!window.MediaRecorder && MediaRecorder.isTypeSupported('video/webm');\nconst isSupported = (addonId, manifest) => {\n    if (!manifest.permissions) {\n        return true;\n    }\n    if (!clipboardSupported && manifest.permissions.includes('clipboardWrite')) {\n        return false;\n    }\n    if (!mediaRecorderSupported && addonId === 'mediarecorder') {\n        return false;\n    }\n    return true;\n};\n\nconst addonMap = {};\nexport const unsupportedAddons = {};\nfor (const addonId of addons) {\n    const manifest = require(`./addons/${addonId}/addon.json`);\n    if (isMobile) {\n        if (typeof manifest.enabledByDefaultMobile !== 'undefined') {\n            manifest.enabledByDefault = manifest.enabledByDefaultMobile;\n        }\n    }\n    if (newAddons.includes(addonId)) {\n        if (!manifest.tags) {\n            manifest.tags = [];\n        }\n        manifest.tags.push('new');\n    }\n    if (isSupported(addonId, manifest)) {\n        addonMap[addonId] = manifest;\n    } else {\n        unsupportedAddons[addonId] = manifest;\n    }\n}\n\nexport default addonMap;\n","var map = {\n\t\"./2d-color-picker/addon.json\": \"./src/addons/addons/2d-color-picker/addon.json\",\n\t\"./bitmap-copy/addon.json\": \"./src/addons/addons/bitmap-copy/addon.json\",\n\t\"./block-palette-icons/addon.json\": \"./src/addons/addons/block-palette-icons/addon.json\",\n\t\"./block-switching/addon.json\": \"./src/addons/addons/block-switching/addon.json\",\n\t\"./blocks2image/addon.json\": \"./src/addons/addons/blocks2image/addon.json\",\n\t\"./cat-blocks/addon.json\": \"./src/addons/addons/cat-blocks/addon.json\",\n\t\"./clones/addon.json\": \"./src/addons/addons/clones/addon.json\",\n\t\"./color-picker/addon.json\": \"./src/addons/addons/color-picker/addon.json\",\n\t\"./custom-block-shape/addon.json\": \"./src/addons/addons/custom-block-shape/addon.json\",\n\t\"./custom-zoom/addon.json\": \"./src/addons/addons/custom-zoom/addon.json\",\n\t\"./data-category-tweaks-v2/addon.json\": \"./src/addons/addons/data-category-tweaks-v2/addon.json\",\n\t\"./debugger/addon.json\": \"./src/addons/addons/debugger/addon.json\",\n\t\"./drag-drop/addon.json\": \"./src/addons/addons/drag-drop/addon.json\",\n\t\"./editor-colored-context-menus/addon.json\": \"./src/addons/addons/editor-colored-context-menus/addon.json\",\n\t\"./editor-devtools/addon.json\": \"./src/addons/addons/editor-devtools/addon.json\",\n\t\"./editor-searchable-dropdowns/addon.json\": \"./src/addons/addons/editor-searchable-dropdowns/addon.json\",\n\t\"./editor-sounds/addon.json\": \"./src/addons/addons/editor-sounds/addon.json\",\n\t\"./editor-stage-left/addon.json\": \"./src/addons/addons/editor-stage-left/addon.json\",\n\t\"./editor-theme3/addon.json\": \"./src/addons/addons/editor-theme3/addon.json\",\n\t\"./folders/addon.json\": \"./src/addons/addons/folders/addon.json\",\n\t\"./gamepad/addon.json\": \"./src/addons/addons/gamepad/addon.json\",\n\t\"./hide-flyout/addon.json\": \"./src/addons/addons/hide-flyout/addon.json\",\n\t\"./initialise-sprite-position/addon.json\": \"./src/addons/addons/initialise-sprite-position/addon.json\",\n\t\"./load-extensions/addon.json\": \"./src/addons/addons/load-extensions/addon.json\",\n\t\"./mediarecorder/addon.json\": \"./src/addons/addons/mediarecorder/addon.json\",\n\t\"./mouse-pos/addon.json\": \"./src/addons/addons/mouse-pos/addon.json\",\n\t\"./mute-project/addon.json\": \"./src/addons/addons/mute-project/addon.json\",\n\t\"./onion-skinning/addon.json\": \"./src/addons/addons/onion-skinning/addon.json\",\n\t\"./pause/addon.json\": \"./src/addons/addons/pause/addon.json\",\n\t\"./remove-curved-stage-border/addon.json\": \"./src/addons/addons/remove-curved-stage-border/addon.json\",\n\t\"./remove-sprite-confirm/addon.json\": \"./src/addons/addons/remove-sprite-confirm/addon.json\",\n\t\"./transparent-orphans/addon.json\": \"./src/addons/addons/transparent-orphans/addon.json\",\n\t\"./tw-interface-customization/addon.json\": \"./src/addons/addons/tw-interface-customization/addon.json\",\n\t\"./tw-project-info/addon.json\": \"./src/addons/addons/tw-project-info/addon.json\",\n\t\"./variable-manager/addon.json\": \"./src/addons/addons/variable-manager/addon.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/addons/addons sync recursive ^\\\\.\\\\/.*\\\\/addon\\\\.json$\";","let changeChannel;\nlet reloadChannel;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    changeChannel = new BroadcastChannel('addons-change');\n    reloadChannel = new BroadcastChannel('addons-reload');\n}\n\nexport default {\n    changeChannel,\n    reloadChannel\n};\n","// Some browsers have a non-functional EventTarget, so we write our own version that works everywhere.\n\nclass EventTargetShim {\n    constructor () {\n        this._events = {};\n    }\n\n    addEventListener (event, handler) {\n        if (!this._events[event]) {\n            this._events[event] = [];\n        }\n        this._events[event].push(handler);\n    }\n\n    removeEventListener (event, handler) {\n        const handlers = this._events[event];\n        if (handlers) {\n            this._events[event] = handlers.filter(i => i !== handler);\n        }\n    }\n\n    dispatchEvent (event) {\n        const handlers = this._events[event.type];\n        if (handlers) {\n            for (const fn of handlers) {\n                fn(event);\n            }\n        }\n    }\n}\n\nexport default EventTargetShim;\n","const isMobile = () => (\n    // In case running in node\n    typeof window !== 'undefined' &&\n    'ontouchstart' in window\n);\n\nexport default isMobile();\n","import SettingsStore from './settings-store';\n\nconst settingStore = new SettingsStore();\nsettingStore.readLocalStorage();\nexport default settingStore;\n","/**\n * Copyright (C) 2021 Thomas Weber\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport addons from './addon-manifests';\nimport upstreamMeta from './upstream-meta.json';\nimport EventTargetShim from './event-target';\n\nconst SETTINGS_KEY = 'tw:addons';\nconst VERSION = 1;\n\nclass SettingsStore extends EventTargetShim {\n    constructor () {\n        super();\n        this.store = this.createEmptyStore();\n    }\n\n    /**\n     * @private\n     */\n    createEmptyStore () {\n        const result = {};\n        for (const addonId of Object.keys(addons)) {\n            result[addonId] = {};\n        }\n        return result;\n    }\n\n    readLocalStorage () {\n        const base = this.store;\n        try {\n            const local = localStorage.getItem(SETTINGS_KEY);\n            if (local) {\n                const result = JSON.parse(local);\n                if (result && typeof result === 'object' && result._ === VERSION) {\n                    for (const key of Object.keys(result)) {\n                        if (base.hasOwnProperty(key)) {\n                            const value = result[key];\n                            if (value && typeof value === 'object') {\n                                base[key] = value;\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (e) {\n            // ignore\n        }\n        this.store = base;\n    }\n\n    /**\n     * @private\n     */\n    saveToLocalStorage () {\n        try {\n            const result = {\n                _: VERSION\n            };\n            for (const addonId of Object.keys(addons)) {\n                const data = this.getAddonStorage(addonId);\n                if (Object.keys(data).length > 0) {\n                    result[addonId] = data;\n                }\n            }\n            localStorage.setItem(SETTINGS_KEY, JSON.stringify(result));\n        } catch (e) {\n            // ignore\n        }\n    }\n\n    /**\n     * @private\n     */\n    getAddonStorage (addonId) {\n        if (this.store[addonId]) {\n            return this.store[addonId];\n        }\n        throw new Error(`Unknown addon store: ${addonId}`);\n    }\n\n    /**\n     * @private\n     */\n    getAddonManifest (addonId) {\n        if (addons[addonId]) {\n            return addons[addonId];\n        }\n        throw new Error(`Unknown addon: ${addonId}`);\n    }\n\n    /**\n     * @private\n     */\n    getAddonSettingObject (manifest, settingId) {\n        if (!manifest.settings) {\n            return null;\n        }\n        for (const setting of manifest.settings) {\n            if (setting.id === settingId) {\n                return setting;\n            }\n        }\n        return null;\n    }\n\n    getAddonEnabled (addonId) {\n        const storage = this.getAddonStorage(addonId);\n        if (storage.hasOwnProperty('enabled')) {\n            return storage.enabled;\n        }\n        const manifest = this.getAddonManifest(addonId);\n        return !!manifest.enabledByDefault;\n    }\n\n    getAddonSetting (addonId, settingId) {\n        const storage = this.getAddonStorage(addonId);\n        const manifest = this.getAddonManifest(addonId);\n        const settingObject = this.getAddonSettingObject(manifest, settingId);\n        if (!settingObject) {\n            throw new Error(`Unknown setting: ${settingId}`);\n        }\n        if (storage.hasOwnProperty(settingId)) {\n            return storage[settingId];\n        }\n        return settingObject.default;\n    }\n\n    /**\n     * @private\n     */\n    getDefaultSettings (addonId) {\n        const manifest = this.getAddonManifest(addonId);\n        const result = {};\n        for (const {id, default: value} of manifest.settings) {\n            result[id] = value;\n        }\n        return result;\n    }\n\n    setAddonEnabled (addonId, value) {\n        const storage = this.getAddonStorage(addonId);\n        const manifest = this.getAddonManifest(addonId);\n        const oldValue = this.getAddonEnabled(addonId);\n        if (value === null) {\n            value = !!manifest.enabledByDefault;\n            delete storage.enabled;\n        } else if (typeof value === 'boolean') {\n            storage.enabled = value;\n        } else {\n            throw new Error('Enabled value is invalid.');\n        }\n        this.saveToLocalStorage();\n        if (value !== oldValue) {\n            const reloadRequired = value ? !manifest.dynamicEnable : !manifest.dynamicDisable;\n            this.dispatchEvent(new CustomEvent('setting-changed', {\n                detail: {\n                    addonId,\n                    settingId: 'enabled',\n                    reloadRequired,\n                    value\n                }\n            }));\n        }\n    }\n\n    setAddonSetting (addonId, settingId, value) {\n        const storage = this.getAddonStorage(addonId);\n        const manifest = this.getAddonManifest(addonId);\n        const settingObject = this.getAddonSettingObject(manifest, settingId);\n        const oldValue = this.getAddonSetting(addonId, settingId);\n        if (value === null) {\n            value = settingObject.default;\n            delete storage[settingId];\n        } else {\n            if (settingObject.type === 'boolean') {\n                if (typeof value !== 'boolean') {\n                    throw new Error('Setting value is invalid.');\n                }\n            } else if (settingObject.type === 'integer') {\n                if (typeof value !== 'number') {\n                    throw new Error('Setting value is invalid.');\n                }\n            } else if (settingObject.type === 'color') {\n                if (typeof value !== 'string' || !/^#[0-9a-f]{6}$/i.test(value)) {\n                    throw new Error('Setting value is invalid.');\n                }\n            } else if (settingObject.type === 'select') {\n                if (!settingObject.potentialValues.some(potentialValue => potentialValue.id === value)) {\n                    throw new Error('Setting value is invalid.');\n                }\n            } else {\n                throw new Error('Setting object is of unknown type');\n            }\n            storage[settingId] = value;\n        }\n        this.saveToLocalStorage();\n        if (value !== oldValue) {\n            this.dispatchEvent(new CustomEvent('setting-changed', {\n                detail: {\n                    addonId,\n                    settingId,\n                    reloadRequired: settingObject.reloadRequired !== false,\n                    value\n                }\n            }));\n        }\n    }\n\n    applyAddonPreset (addonId, presetId) {\n        const manifest = this.getAddonManifest(addonId);\n        for (const {id, values} of manifest.presets) {\n            if (id !== presetId) {\n                continue;\n            }\n            const settings = {\n                ...this.getDefaultSettings(addonId),\n                ...values\n            };\n            for (const key of Object.keys(settings)) {\n                this.setAddonSetting(addonId, key, settings[key]);\n            }\n            return;\n        }\n        throw new Error(`Unknown preset: ${presetId}`);\n    }\n\n    resetAllAddons () {\n        for (const addon of Object.keys(addons)) {\n            this.resetAddon(addon, true);\n        }\n        // In case resetAddon missed some properties, do a hard reset on storage.\n        this.store = this.createEmptyStore();\n        this.saveToLocalStorage();\n    }\n\n    resetAddon (addonId, resetEverything) {\n        const storage = this.getAddonStorage(addonId);\n        for (const setting of Object.keys(storage)) {\n            if (setting === 'enabled') {\n                if (resetEverything) {\n                    this.setAddonEnabled(addonId, null);\n                }\n                continue;\n            }\n            try {\n                this.setAddonSetting(addonId, setting, null);\n            } catch (e) {\n                // ignore\n            }\n        }\n    }\n\n    export ({theme}) {\n        const result = {\n            core: {\n                // Upstream property. We don't use this.\n                lightTheme: theme === 'light',\n                // Append -tw to all versions, for example 1.8.0-prerelease-tw\n                version: `${upstreamMeta.version}-tw`\n            },\n            addons: {}\n        };\n        for (const [addonId, manifest] of Object.entries(addons)) {\n            const enabled = this.getAddonEnabled(addonId);\n            const settings = {};\n            if (manifest.settings) {\n                for (const {id} of manifest.settings) {\n                    settings[id] = this.getAddonSetting(addonId, id);\n                }\n            }\n            result.addons[addonId] = {\n                enabled,\n                settings\n            };\n        }\n        return result;\n    }\n\n    import (data) {\n        for (const [addonId, value] of Object.entries(data.addons)) {\n            if (!addons.hasOwnProperty(addonId)) {\n                continue;\n            }\n            const {enabled, settings} = value;\n            if (typeof enabled === 'boolean') {\n                this.setAddonEnabled(addonId, enabled);\n            }\n            for (const [settingId, settingValue] of Object.entries(settings)) {\n                try {\n                    this.setAddonSetting(addonId, settingId, settingValue);\n                } catch (e) {\n                    // ignore\n                }\n            }\n        }\n    }\n\n    setStoreWithVersionCheck ({version, store}) {\n        if (version !== upstreamMeta.commit) {\n            return;\n        }\n        this.setStore(store);\n    }\n\n    setStore (newStore) {\n        const oldStore = this.store;\n        for (const addonId of Object.keys(oldStore)) {\n            const oldSettings = oldStore[addonId];\n            const newSettings = newStore[addonId];\n            if (!newSettings || typeof newSettings !== 'object') {\n                continue;\n            }\n            if (JSON.stringify(oldSettings) !== JSON.stringify(newSettings)) {\n                const manifest = this.getAddonManifest(addonId);\n                const dynamicEnable = !!manifest.dynamicEnable && !oldSettings.enabled && newSettings.enabled;\n                const dynamicDisable = !!manifest.dynamicDisable && oldSettings.enabled && !newSettings.enabled;\n                // Clone to avoid pass-by-reference issues\n                this.store[addonId] = JSON.parse(JSON.stringify(newSettings));\n                this.dispatchEvent(new CustomEvent('addon-changed', {\n                    detail: {\n                        addonId,\n                        dynamicEnable,\n                        dynamicDisable\n                    }\n                }));\n            }\n        }\n    }\n}\n\nexport default SettingsStore;\n","import React from 'react';\nimport darkModeCSS from '!raw-loader!./tw-theme-dark.css';\n\nconst THEME_KEY = 'tw:theme';\n\nconst darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\nexport const getInitialDarkMode = () => {\n    try {\n        const item = localStorage.getItem(THEME_KEY);\n        if (item !== null) {\n            return item === 'dark';\n        }\n    } catch (e) {\n        // ignore\n    }\n    return darkMediaQuery.matches;\n};\n\nconst darkModeStylesheet = document.createElement('style');\ndarkModeStylesheet.textContent = darkModeCSS;\n\nconst ThemeHOC = function (WrappedComponent) {\n    class ThemeComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            this.handleQueryChange = this.handleQueryChange.bind(this);\n            this.handleClickTheme = this.handleClickTheme.bind(this);\n            this.state = {\n                dark: getInitialDarkMode()\n            };\n        }\n        componentDidMount () {\n            // media query does not have listeners in legacy edge\n            if (darkMediaQuery.addEventListener) {\n                darkMediaQuery.addEventListener('change', this.handleQueryChange);\n            }\n            this.updateDark();\n        }\n        componentDidUpdate () {\n            try {\n                localStorage.setItem(THEME_KEY, this.state.dark ? 'dark' : 'light');\n            } catch (e) {\n                // ignore\n            }\n            this.updateDark();\n        }\n        componentWillUnmount () {\n            // media query does not have listeners in legacy edge\n            if (darkMediaQuery.removeEventListener) {\n                darkMediaQuery.removeEventListener('change', this.handleQueryChange);\n            }\n        }\n        updateDark () {\n            const dark = this.state.dark;\n            document.body.setAttribute('theme', dark ? 'dark' : 'light');\n            if (dark && !darkModeStylesheet.parentNode) {\n                document.body.insertBefore(darkModeStylesheet, document.body.firstChild);\n            } else if (!dark && darkModeStylesheet.parentNode) {\n                darkModeStylesheet.parentNode.removeChild(darkModeStylesheet);\n            }\n        }\n        handleQueryChange () {\n            this.setState({\n                dark: darkMediaQuery.matches\n            });\n        }\n        handleClickTheme () {\n            this.setState(state => ({\n                dark: !state.dark\n            }));\n        }\n        render () {\n            return (\n                <WrappedComponent\n                    onClickTheme={this.handleClickTheme}\n                    {...this.props}\n                />\n            );\n        }\n    }\n    return ThemeComponent;\n};\n\nexport {\n    ThemeHOC as default\n};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACRA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA4BA;;;;;;;;;;;;AC/BA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AA9TA;AACA;AA+TA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvVA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AADA;AAKA;AACA;AAzDA;AACA;AAyDA;AACA;AACA;;;;;A","sourceRoot":""}